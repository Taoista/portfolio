---
interface Props {
    id:number;
    title:string;
    description:string;
    img: string;
    repository: string | null;
    download: string | null;
	logo: string;
    url: string | null;
    tenology:Array<string>;
}

const { id, title, description, img,repository, download, logo, url, tenology  } = Astro.props;
---

<li>
    <a href={`/proyectos/${id}`}>
        <div class="card">
            <img src={img} class="card__image" alt="" />
            <div class="card__overlay">
                <div class="card__header">
                    <svg class="card__arc" xmlns="http://www.w3.org/2000/svg"><path /></svg>                     
                    <img class="card__thumb" src={logo} alt="" />
                    <div class="card__header-text">
                        <h5 class="card__title">{title}</h5>            
                        <p class="card__tecnologies">Tecnolog√≠a</p>            
                        {tenology.map((tec) => (
                            <img style="max-width: 22px;" src={tec} alt="">
                        ))}
                    </div>
                </div>
                <p class="card__description">{description}</p>
                <p class="card__description">
                    {repository != null ? ( <a href={repository} target="_blank"><img src="icons/github.svg" alt=""></a> ) : ('')}
                    {download != null ? ( <a href={download} target="_blank"><img src="icons/download.svg" alt=""></a> ) : ('')}
                    {url != null ? ( <a href={url} target="_blank"><img  style="max-width: 22px;" src="icons/url.svg" alt=""></a> ) : ('')}
                    <a href=""><img src={download} alt=""></a>
                </p>
            </div>
        </div>      
    </a>
</li>



<style>
    :root {
  --surface-color: #fff;
  --curve: 40;
}

* {
  box-sizing: border-box;
}

body {
  font-family: 'Noto Sans JP', sans-serif;
  background-color: #fef8f8;
}

.cards {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
  gap: 2rem;
  margin: 4rem 5vw;
  padding: 0;
  list-style-type: none;
}

.card {
  position: relative;
  display: block;
  height: 100%;  
  border-radius: calc(var(--curve) * 1px);
  overflow: hidden;
  text-decoration: none;
}

.card__image {      
  width: 100%;
  height: auto;
}

.card__overlay {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1;      
  border-radius: calc(var(--curve) * 1px);    
  background-color: var(--surface-color);      
  transform: translateY(100%);
  transition: .2s ease-in-out;
}

.card:hover .card__overlay {
  transform: translateY(0);
}

.card__header {
  position: relative;
  display: flex;
  align-items: center;
  gap: 2em;
  padding: 2em;
  border-radius: calc(var(--curve) * 1px) 0 0 0;    
  background-color: var(--surface-color);
  transform: translateY(-100%);
  transition: .2s ease-in-out;
}

.card__arc {
  width: 80px;
  height: 80px;
  position: absolute;
  bottom: 100%;
  right: 0;      
  z-index: 1;
}

.card__arc path {
  fill: var(--surface-color);
  d: path("M 40 80 c 22 0 40 -22 40 -40 v 40 Z");
}       

.card:hover .card__header {
  transform: translateY(0);
}

.card__thumb {
  flex-shrink: 0;
  width: 50px;
  height: 50px;      
  border-radius: 50%;      
}

.card__title {
  font-size: 1em;
  margin: 0 0 .3em;
  color: #6A515E;
}

.card__tagline {
  display: block;
  margin: 1em 0;
 /*font-family: "MockFlowFont";  */
  font-size: .8em; 
  color: #D7BDCA;  
}

.card__status {
  font-size: .8em;
  color: #D7BDCA;
}

.card__description, .card__tecnologies {
  padding: 0 2em 2em;
  margin: 0;
  color: #313131;
    /*font-family: "MockFlowFont";   */
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
  overflow: hidden;
}    

.card__tecnologies{
    padding: 0 0 0 0;
}
</style>